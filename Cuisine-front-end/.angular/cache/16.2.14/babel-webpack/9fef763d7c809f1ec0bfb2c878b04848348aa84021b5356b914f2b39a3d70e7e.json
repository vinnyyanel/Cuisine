{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PlatService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllPlat() {\n    return this.http.get(`http://127.0.0.1:8000/api/plats`);\n  }\n  static #_ = this.ɵfac = function PlatService_Factory(t) {\n    return new (t || PlatService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlatService,\n    factory: PlatService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PlatService","constructor","http","getAllPlat","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Nouveau dossier\\projet fullstack\\Cuisine\\Cuisine-front-end\\src\\app\\services\\plat.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Plat } from '../models/plat.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlatService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllPlat():Observable<Plat[]>{\n    return this.http.get<Plat[]>(`http://127.0.0.1:8000/api/plats`);\n  }\n\n  postAllPlat():O\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,iCAAiC,CAAC;EACjE;EAAC,QAAAC,CAAA,G;qBANUL,WAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXV,WAAW;IAAAW,OAAA,EAAXX,WAAW,CAAAY,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}